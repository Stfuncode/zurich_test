# Generated by Django 3.0.1 on 2021-06-24 08:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import user_accounts.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(default='', max_length=254, null=True, unique=True)),
                ('identity_number', models.CharField(default='', max_length=14)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', user_accounts.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MSVR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_effective_date', models.DateField()),
                ('request_date', models.DateField()),
                ('basic_plan', models.CharField(max_length=8)),
                ('premium', models.DecimalField(decimal_places=2, max_digits=12)),
                ('sum_insured', models.DecimalField(decimal_places=2, max_digits=12)),
            ],
        ),
        migrations.CreateModel(
            name='PolicyDetails',
            fields=[
                ('policy_number', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='Policy Number')),
                ('policy_status', models.CharField(max_length=20, verbose_name='Policy Status')),
                ('insured_name', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[A-Z_]*$', 'Only uppercase letters and underscores allowed.')], verbose_name='Insured Name')),
                ('basic_product', models.CharField(max_length=5, verbose_name='Basic Product')),
                ('request_date', models.DateField(verbose_name='Requested Date')),
            ],
        ),
        migrations.CreateModel(
            name='UserPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_accounts.PolicyDetails')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NomineeDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[A-Z_]*$', 'Only uppercase letters and underscores allowed.')])),
                ('ic_num', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator('^[0-9]*-[0-1][0-9]-[0-9]*', 'Please follow standard NRIC formatting.')])),
                ('share_num', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)])),
                ('relationship', models.CharField(choices=[('Please Select', 'Please Select'), ('Parent', 'Parent'), ('Child', 'Child'), ('Sibling', 'Sibling'), ('Grandparent', 'Grandparent'), ('GrandChild', 'GrandChild')], default='Please Select', max_length=20)),
                ('gender', models.CharField(choices=[('Please Select', 'Please Select'), ('Male', 'Male'), ('Female', 'Female')], default='Please Select', max_length=20)),
                ('date_of_birth', models.DateField(verbose_name='Date Of Birth')),
                ('mobile_number', models.CharField(max_length=18, validators=[django.core.validators.RegexValidator('^(\\+\\d{1,3})?,?\\s?\\d{8,13}', 'Please follow standard global mobile number formatting')])),
                ('nomination_type', models.CharField(choices=[('Please Select', 'Please Select'), ('A', 'A'), ('B', 'B'), ('C', 'C')], default='Please Select', max_length=30, verbose_name='Nomination Type')),
                ('user_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_accounts.UserPolicy')),
            ],
        ),
        migrations.CreateModel(
            name='MSVRChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_premium', models.CharField(choices=[('Please Select', 'Please Select'), ('Monthly Mode', 'M'), ('Yearly Mode', 'Y')], max_length=50, verbose_name='Current MSVR Premium')),
                ('new_premium', models.PositiveIntegerField(default=0, verbose_name='New MSVR Premium')),
                ('agreement', models.BooleanField(default=False)),
                ('msvr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_accounts.MSVR')),
            ],
        ),
        migrations.AddField(
            model_name='msvr',
            name='user_policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_accounts.UserPolicy'),
        ),
        migrations.CreateModel(
            name='ChangeRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(choices=[('Nomination', 'Nomination'), ('MSVR', 'MSVR')], max_length=50, verbose_name='Type of Request')),
                ('user_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_accounts.UserPolicy')),
            ],
        ),
    ]
